#ifndef STUDENT_H
#define STUDENT_H

#define MAX_NAME_LENGTH 50
#define SID_LENGTH 10

#define DONUT "\nAnd here is a donut for you! \n\n"\
"...................... ....... ...........,]]/@@@@@@@@@@@@@@@@@@@@@@@@]]]`....................... ... ... ... ..\n"\
" ................................]]@@@@@@@@@@@@@@@@@@@@@@@@@@OOO@@@@@@@@@@@@@@@@]`..............................\n"\
"...........................]@@@@@@@@@@@@O@@O@@@@@@@@@@@@@@@@O]]]@@@@@@@@@@@@@@O@@@@@@/`.........................\n"\
"......................]@@@@@@@@@@@O[[/@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@O@@@@/`.....................\n"\
"..................,/@@@@O@@@@@@@@@/]]O@@@@@@@@@@@@@@OOO@@@@@@@@@@OO@@@@@@@@@@@`..O@@@@@@@@@@@`..................\n"\
"................/@@@@@@@@@@@@@@@@@@@@O@@@@@@@@@@@@@@@@@@@@@@@@@@OOO@@@@@@@@@@@@@@@@@@@@@@@@@O@@@`...............\n"\
".............,@@@O@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@O@@@].............\n"\
"...........,@@@@@@@@@@@@@@@@@@@@@@O`**O@@@@@@@@@^*,O@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@OO@@@O@@^...........\n"\
"..........@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@[O@@@@@@@OOO@@@@@@@@@@/.=@@@@@@@@@@@@@@@@`.........\n"\
"........=@@@@@@@@@@@@@@@@@@@@OO@@@O@@@@@@@@@@@@@@@@@@@@@@@@@/..@@@@@@@@@@@O@@@@@@@@@/.,@@@@@@@@@@@@@@@@/........\n"\
".......=@@@@@@@@@@@@@@@@@@@@@`..=@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@O@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/.......\n"\
"......,@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@O@@@@@@@@@@O@@@O@O@@@@@@@@@@@@@@@/[O@@@@@@@@@@@@@@@@@......\n"\
"......=@@@@@@@@@@@@@@@@@@OOO@@@@@@@@@@@@@@@@@@@@@@@@@[`.......,[[@@@@@@@@@@@@OO@@@@@@@O]O@@@@@@@@@@@@@@@@@/.....\n"\
".......@@@@@@@@@@@@@@@@@OOOOO@@@@@@@@@@@@@@@@@@@`.......,]]]/@@@@@@@@@@@@@@OOO@@@@@@@@@@@@@@@@@@@@@@@@@@@@@`....\n"\
"......=@OO@@O@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@O@@@@@@@@@@@@O@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@^....\n"\
".......@@OooOO@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@O@@@@@@@@@OOO@@@@@@@@@O/[O@@@@@@@@@@@@@@@@@@@@@@@@@@@^....\n"\
".......@OoOooo@@@@@@@@@@@@@@@@@@@^.=@@@@@@O[/O@@@@@@@@@/**/@@@@@OOOO@@@@@@@@O]]/@@@@@@@@@O@@@@@@@@@@@@@@@@@.....\n"\
".......@@oOoo@@O@@@@@@@@@@@@@@@@@O`,@@@@@@@@//@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@O@@@@.......\n"\
".......=@oOo@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@/.,@@@@@@@@@@@@@O@@@@@@@@@@@@@@O@@@@@@@@@O@@^.......\n"\
"........@@/@@@@@@@@@@@O@@@@@@@OOO@@@@O@@@@@@@@@@@@@O@@@@@@@@@O]/@@@@@@@@@@@@@@@@@@@@O@@@@@@O@@@@@@@@@O@@........\n"\
"........,@@O@@O@@@@@@@@@@@OOooooo//O@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@OooOOoooOO@@@@@@@@@@@@@@@@@@@@/.........\n"\
"..........@@o@@@@@@@@@OOooooooooooooO@@@@@O@@@@OO@@@O@@@@@@@@@@@@@OOooooooooooooOoo@@@@@@@@@@@@@@@O@@^..........\n"\
".........../@O/OoOOOooooooooooooooooOO@@@@@/oooOooooooooooOOOOoooooooooooooooooooOoo@@@O@@@@@@@@O@@/............\n"\
".............@@OooOooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo/O@@@@@@O@@@@@..............\n"\
"..............@@@ooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooO@@@@O@@@@oo...............\n"\
"...............@@@oooOooooooooooooooOoooooooooooooooooooooooooooooooooooOooOoooOO@@OO@@@@@/ooooo................\n"\
"................@@@OoOooooooooooooooooooooooooooooooooooooooooOoooooOOOOOO@@@@@@@@Oooo/oo^ooo...................\n"\
"..................@@@@OooooooooOOOOoooOOoOOoooooOOooooOOOOO@@@@O@@@@@@@@@@/Ooooooooo/ooooo......................\n"\
"....................@@@@@OOooOoooooooooOOO@@@@@OO@@@@@@@@@@@OO]oooooo/ooooooooo/[...............................\n"\
".......................oooo/oooooooooooooOO@@@@@@@@@@@@@@@@@OOoo]oooooooooooooo.................................\n"\
"................................[[[[ooooooooo//oooooooooooooooooooooooo[[[[[....................................\n"


typedef struct{
    char last_name[MAX_NAME_LENGTH];
    char first_name[MAX_NAME_LENGTH];
    char student_number[SID_LENGTH];
    int midterm_grade;
    int final_grade;
} Student;

int compare_students(const Student *a, const Student *b);

void quick_sort(Student students[], int left, int right);

float calculate_average(const Student *student);

int read_students(const char *filename, Student students[], int max_students);

void write_to_file(const char *filename, const Student students[], int count, int option);

#endif